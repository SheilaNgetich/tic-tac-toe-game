
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Sheila
 */
public class TicTacToe extends javax.swing.JFrame {

    //variable to monitor the players turn
    int turn = 2;

    //array to check whether a button has been used 
    int[] usedButton = {0, 0, 0, 0, 0, 0, 0, 0, 0};

    //tracks spots filled by player x and o
    int[] p1Won = {0, 0, 0, 0, 0, 0, 0, 0, 0};
    int[] p2Won = {0, 0, 0, 0, 0, 0, 0, 0, 0};

    //method to check if p1(x) has won
    //it checks all possible winning combinations
    int p1Won() {
         // Check for horizontal wins
        if (p1Won[0] == 1 && p1Won[1] == 1 && p1Won[2] == 1) {
            return 1;
        }
        if (p1Won[3] == 1 && p1Won[4] == 1 && p1Won[5] == 1) {
            return 1;
        }
        if (p1Won[6] == 1 && p1Won[7] == 1 && p1Won[8] == 1) {
            return 1;
        }
        
         // Check for vertical wins
        if (p1Won[0] == 1 && p1Won[3] == 1 && p1Won[6] == 1) {
            return 1;
        }
        if (p1Won[1] == 1 && p1Won[4] == 1 && p1Won[7] == 1) {
            return 1;
        }
        if (p1Won[2] == 1 && p1Won[5] == 1 && p1Won[8] == 1) {
            return 1;
        }
        
         // Check for diagonal wins
        if (p1Won[0] == 1 && p1Won[4] == 1 && p1Won[8] == 1) {
            return 1;
        }
        if (p1Won[2] == 1 && p1Won[4] == 1 && p1Won[6] == 1) {
            return 1;
        }
        //returns 0 if no win is found
        return 0;
    }

    //method to check if p2(o) has won
    //it checks all possible winning combinations
    int p2Won() {
         // Check for horizontal wins
        if (p2Won[0] == 1 && p2Won[1] == 1 && p2Won[2] == 1) {
            return 1;
        }
        if (p2Won[3] == 1 && p2Won[4] == 1 && p2Won[5] == 1) {
            return 1;
        }
        if (p2Won[6] == 1 && p2Won[7] == 1 && p2Won[8] == 1) {
            return 1;
        }
        
         // Check for vertical wins
        if (p2Won[0] == 1 && p2Won[3] == 1 && p2Won[6] == 1) {
            return 1;
        }
        if (p2Won[1] == 1 && p2Won[4] == 1 && p2Won[7] == 1) {
            return 1;
        }
        if (p2Won[2] == 1 && p2Won[5] == 1 && p2Won[8] == 1) {
            return 1;
        }
        
         // Check for diagonal wins
        if (p2Won[0] == 1 && p2Won[4] == 1 && p2Won[8] == 1) {
            return 1;
        }
        if (p2Won[2] == 1 && p2Won[4] == 1 && p2Won[6] == 1) {
            return 1;
        }
        //returns 0 if no win is found
        return 0;
    }

    public TicTacToe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        b2.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b1.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b4.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b6.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b5.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b9.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        b8.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b7.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        reset.setForeground(new java.awt.Color(153, 0, 153));
        reset.setText("Play Again");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ready ? Go!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(138, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(131, 131, 131))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // Logic to alternate between player 1 and player 2's turn
        // Player 1 (X) plays on even turns, Player 2 (O) plays on odd turns
        if (usedButton[0] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b1.setText("X");
                usedButton[0] = 1;
                p1Won[0] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b1.setText("O");
                p2Won[0] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display message for the winner
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }

    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        if (usedButton[1] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b2.setText("X");
                usedButton[1] = 1;
                p1Won[1] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b2.setText("O");
                p2Won[1] = 1;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        if (usedButton[2] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b3.setText("X");
                usedButton[2] = 1;
                p1Won[2] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b3.setText("O");
                p2Won[2] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }

    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        if (usedButton[3] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b4.setText("X");
                usedButton[3] = 1;
                p1Won[3] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b4.setText("O");
                p2Won[3] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        if (usedButton[4] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b5.setText("X");
                usedButton[4] = 1;
                p1Won[4] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b5.setText("O");
                p2Won[4] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }

    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        if (usedButton[5] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b6.setText("X");
                usedButton[5] = 1;
                p1Won[5] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X!");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b6.setText("O");
                p2Won[5] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }

    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        if (usedButton[6] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b7.setText("X");
                usedButton[6] = 1;
                p1Won[6] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b7.setText("O");
                p2Won[6] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }

    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        if (usedButton[7] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b8.setText("X");
                usedButton[7] = 1;
                p1Won[7] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b8.setText("O");
                p2Won[7] = 1;

                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }

    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        if (usedButton[8] == 0) {
            if (turn % 2 == 0) {
                turn++;
                b9.setText("X");
                usedButton[8] = 1;
                p1Won[8] = 1;
                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

                //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }

            } else {//player 2's turn
                turn++;
                b9.setText("O");
                p2Won[7] = 1;
                //result variable that holds winning status
                int result1 = p1Won();
                int result2 = p2Won();

               //display winner message if game is over
                if (result1 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player X! ");
                } else if (result2 == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Congratulations, Player O! ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Spot Filled");
        }

    }//GEN-LAST:event_b9ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        //resetting the buttons
        b1.setText("");
        b2.setText("");
        b3.setText("");
        b4.setText("");
        b5.setText("");
        b6.setText("");
        b7.setText("");
        b8.setText("");
        b9.setText("");
        
        //resetting the turn variable
        turn = 2;
        
        //resetting the usedButton array
        for (int i = 0; i <usedButton.length; i++) {
            usedButton[i] = 0;
        }
        
        //resetting the p1Won array
        for (int i = 0; i <p1Won.length; i++) {
            p1Won[i] = 0;
        }
        
        //resetting the p2Won array
        for (int i = 0; i <p2Won.length; i++) {
            p2Won[i] = 0;
        }
        
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTacToe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton reset;
    // End of variables declaration//GEN-END:variables
}
